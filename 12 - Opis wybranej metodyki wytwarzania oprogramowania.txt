12 - Opis wybranej metodyki wytwarzania oprogramowania

Niektóre źródła:
http://adku.pl/kanban-wydajnosc-it/
https://www.youtube.com/watch?v=CD0y-aU1sXo


1. Wstęp i geneza powstania Kanbana
2. Po co powstał? Jakie problemy miał rozwiązać?
3. Kanban w IT - przezroczystość, tablica, limity, priorytety na bieżąco (insertion sort)
4. Adaptacje Kanbana - daily, scrum-ban, jednakowo kompetenty zespół, 
5. Podsumowani


1. Kilka miesięcy temu moją uwagę przyciągnęła metodyka Kanban.
Robiłem rozeznanie do projektu i postanowiłem dać mu szanse.

Kanban wywodzi się z Japoni lat 50 i kompletnie innej branży.
Stworzono go z myślą o liniach produkcyjnych koncernu samochodowego marki Toyota.
Wprowadzenie Kanbana przyniosło tak korzystne skutki, że zainteresowano się nim 
w innych branżach - w tym IT.


2. Po co go stworzono?
Zauważono, że nadmiary w magazynach przynoszą ogromne straty i przyczyną takiego stanu rzeczy
była nierównomierna praca zespołów produkcyjnych.
Czyli jedni zrobili za szybko, wieć żeby się nie nudzić robili dalej, ale zespół następny
nie potrafił dotrzymać tempa i zaczęły tworzyć się zatory, ciasne gardła (tzw. bottlenecki)

Ideą stojącą za tą metodyką jest niedoprowadzanie do: braków, opóźnień i zapasów.
W tym celu korzystano z fizycznych kart, które migrowały między stanowiskami.
Dopiero kiedy następny zespół był gotowy, to poprzedni realizował zamówienia.
Nazywa się to systemem ciągnionym - scrum również jest pull systemem, bo klient przez product ownera
dodaje zadania takie jakie potrzebuje.

Metodyka ta polega na wizualizacji wszystkim całego procesu i zapobiegania niepłynności.
(Czasem porównuje się ją do rurociągu).

3. Przechodząc do meritum czyli jak to działa w IT:

Musimy wyposażyć się w jakąś tablicę, którą dzielimy wedle kolumn. Ich ilość i przeznaczenie dobieramy
sami wedle potrzeb. Przykleja się na niej karteczki z zadaniami.
Przykładowo mamy kolumny:

Backlog | Breakdown | Obecne zadania | Walidacja | Dostarczenie
Zaleca się dzielenie tego co się da na 2 podkolumny: In progress oraz Done

W czym tkwi innowacja? Bo wygląda podobnie do Scruma.
Sekretem jest ograniczanie ilości karteczek, które mogą znajdować się w poszczególnych kolumnach, etapach.
Dobiera się je w zależności od najwolniejszego etapu - nie ma sztywnych granic.
Nie ma żadnych obostrzeń co do konieczności nadawania jakiś story pointów, albo pracochłonności - dowolność.
Ogólnie nie precyzuje się dat dostarczenia/deadlinów. Mnóstwo zespołów jest w stanie robić wszystko na czas
bez martwienia się o uciekający czas.

Backlog działa trochę jak taka lista sortowana przez wstawienie (insertion sort).
Jeśli klient zażąda czegoś, albo okaże się, że coś trzeba poprawić/dodać w trakcie, to bez problemu
dodajemy na listę i ustawiamy ją w kolejności wedle priorytetu.
Z nowu: można nadawać karteczkom tzw. silverbullet, czyli priorytet, że cały zespół zajmuje się tylko
tą jedną rzeczą.


4. Adaptacje:
--- Posłużę się przykładem zespołu od XBOX ONE z Microsoftu ---

4.1 Często wprowadza się daily standup ze Scruma, aby poukładać karteczki, zaplanować dzień.
Nie jest to żadnym standardem - nie ma ściśle mastera, ale bywa nim Project manager, albo Agile coach.

4.2 Zadaniom czasem nadaje się minimalne warunki, które muszą spełnić, aby przejść do następnego
etapu (kolumny)
Przykładowo: przejście unit testów, code review, kilka godzin

4.3 Menadżerowie projektów lubią przydzielać zadania losowo - "kto pierwszy ten lepszy".
Takie działanie sprawia, że każdy członek zespołu jest wykwalifikowany i potrafi zastąpić innego.
To gwaranuje nam, że w razie choroby, zwolnienia itp. zespół jest w stanie dalej pracować.

4.4 Na kartkach z zadaniami można wstawiać kreski symbolizujące dni, jak długo „leży” w danej kolumnie.

5. Podsumowanie
- bardzo elastyczny
- przezroczysty dla podejścia -> może być iteracyjny lub zdyscyplinowany
- pozwala zespołowi dopasowywać go do potrzeb
- nastawiony na wizualizację, komunikację i płynność, bez nadmiarów i braków - Limity WIP (work in progress)
- zapewnia płynność

Różnice względem scruma:
- nie ma stałych sprintów, o określonej długości i z niezmiennym zestawem zadań
- produkt jest gotowy po każdym zrobionym zadaniu, a nie na końcu sprintu
- nie ma scrum mastera i product ownera wprost, ale może być jakiś coach
- nastawiony na płynność, a nie na prędkość
- kanban dopasowuje limity i zasady w trakcie, a nie ze scrum ma wyznaczone standardy (które i tak się łamie)

------------
TODO Poczytać o Scrumie i RUP, bo mogą zapytać


